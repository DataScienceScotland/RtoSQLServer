% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_table.R
\name{read_table_from_db}
\alias{read_table_from_db}
\title{Read a SQL Server table into an R dataframe.}
\usage{
read_table_from_db(
  database,
  server,
  schema,
  table_name,
  columns = NULL,
  filter_stmt = NULL,
  include_pk = FALSE,
  cast_datetime2 = TRUE
)
}
\arguments{
\item{database}{Database containing table to read.}

\item{server}{Server instance where SQL Server database running.}

\item{schema}{Name of database schema containing table to read.}

\item{table_name}{Name of table in database to read.}

\item{columns}{Optional vector of column names to select.}

\item{filter_stmt}{Optional filter statement to only read a subset of
rows from the specified database table.
\itemize{
\item this should be a character
expression in the format of a \code{\link[dplyr:filter]{dplyr::filter()}} query,
for example \code{"Species == 'virginica'"} and it will be translated to SQL
using \code{\link[dbplyr:translate_sql]{dbplyr::translate_sql()}}. One way to achieve the right
syntax for this argument is to pass a \code{\link[dplyr:filter]{dplyr::filter()}} expression
through \code{deparse1(substitute())}, for example
\code{deparse1(substitute(Species == "virginica"))}
}}

\item{include_pk}{Whether to include primary key column in output dataframe.
A primary key  column is added automatically when a table is loaded into the
database using \code{create_replace_table} as <table_name>ID. Defaults to FALSE.}

\item{cast_datetime2}{Cast \code{datetime2} data type columns to \code{datetime}.
This is to help older ODBC drivers where datetime2 columns are read into R
as character when should be POSIXct. Defaults to TRUE.}
}
\value{
Dataframe of table.
}
\description{
If you are confident in writing SQL you may prefer to
use the \code{\link[=execute_sql]{execute_sql()}} function instead.
}
\examples{
\dontrun{
read_table_from_db(
  server = "my_server",
  database = "my_database",
  schema = "my_schema",
  table_name = "my_table",
  columns = c("column1", "column2"),
  filter_stmt = "column1 < 5 & column2 == 'b'"
)
}
}
